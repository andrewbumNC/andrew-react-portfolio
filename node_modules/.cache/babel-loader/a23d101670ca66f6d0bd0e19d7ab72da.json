{"ast":null,"code":"var _jsxFileName = \"/Users/andrewbumgarner/projects/react-portfolio/my-react-portfolio/src/components/contact.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { checkPassword, validateEmail } from '../components/utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Contactme() {\n  _s();\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleInputChange = event => {\n    const {\n      target\n    } = event;\n    const inputType = target.name;\n    const inputValue = target.value;\n\n    if (inputType === 'email') {\n      setEmail(inputValue);\n    } else if (inputType === \"firstName\") {\n      setFirstName(inputValue);\n    } else if (inputType === \"lastName\") {\n      setLastName(inputValue);\n    } else {\n      setMessage(inputValue);\n    }\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    if (!validateEmail(email)) {\n      setErrorMessage(\"Email is invalid\");\n      return;\n    }\n\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"exampleForm.ControlInput1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        value: firstName,\n        name: \"firstName\",\n        onChange: handleInputChange,\n        placeholder: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"exampleForm.ControlInput2\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        value: lastName,\n        name: \"lastName\",\n        onChange: handleInputChange,\n        placeholder: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"exampleForm.ControlInput3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        value: email,\n        name: \"email\",\n        onChange: handleInputChange,\n        placeholder: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"exampleForm.ControlTextarea4\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        value: email,\n        name: \"email\",\n        onChange: handleInputChange,\n        placeholder: \"\",\n        as: \"textarea\",\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"button\",\n      onClick: handleFormSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 3\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Contactme, \"de3ON2gxxxR2KkvmVLA/V3xIBQg=\");\n\n_c = Contactme;\nexport default Contactme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contactme\");","map":{"version":3,"sources":["/Users/andrewbumgarner/projects/react-portfolio/my-react-portfolio/src/components/contact.js"],"names":["useState","Form","Button","checkPassword","validateEmail","Contactme","firstName","setFirstName","lastName","setLastName","email","setEmail","message","setMessage","errorMessage","setErrorMessage","handleInputChange","event","target","inputType","name","inputValue","value","handleFormSubmit","preventDefault"],"mappings":"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","sourcesContent":["\n\nimport { useState } from \"react\"\nimport { Form, Button } from \"react-bootstrap\"\nimport { checkPassword, validateEmail } from '../components/utils/helpers'\n\n\nfunction Contactme () {\n\nconst [firstName, setFirstName] = useState(\"\");\nconst [lastName, setLastName] = useState(\"\");\nconst [email, setEmail] = useState(\"\");\nconst [message, setMessage] = useState(\"\")\nconst [errorMessage, setErrorMessage] = useState(\"\");\n\n\nconst handleInputChange = (event) => {\n\nconst { target } = event;\n\nconst inputType = target.name;\nconst inputValue = target.value;\n\nif (inputType === 'email') {\n    setEmail(inputValue);\n} else if (inputType === \"firstName\"){\n    setFirstName(inputValue); \n} else if (inputType === \"lastName\"){\n    setLastName(inputValue);\n} else {\n    setMessage(inputValue);\n}\n\n};\n\nconst handleFormSubmit = (event) => {\nevent.preventDefault();\n\nif(!validateEmail(email)) {\n    setErrorMessage(\"Email is invalid\");\n    return;\n}\n\nsetFirstName(\"\");\nsetLastName(\"\");\nsetEmail(\"\");\n\n\n\n}\n\n\nreturn (\n    \n    <Form>\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n    <Form.Label>First Name</Form.Label>\n    <Form.Control \n    type=\"text\" \n    value={firstName} \n    name=\"firstName\"\n    onChange={handleInputChange}\n    placeholder=\"\"\n    />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput2\">\n    <Form.Label>Last Name</Form.Label>\n    <Form.Control \n    type=\"text\" \n    value={lastName} \n    name=\"lastName\"\n    onChange={handleInputChange}\n    placeholder=\"\"\n     />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput3\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control \n    type=\"text\" \n    value={email}\n    name=\"email\"\n    onChange={handleInputChange}\n    placeholder=\"\"\n    />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea4\">\n    <Form.Label>Message</Form.Label>\n    <Form.Control type=\"text\" \n    value={email}\n    name=\"email\"\n    onChange={handleInputChange}\n    placeholder=\"\"\n    as=\"textarea\" rows={3} />\n  </Form.Group>\n  <Button variant=\"primary\" type=\"button\" onClick={handleFormSubmit}>\n    Submit\n  </Button>\n  {errorMessage && (\n        <div>\n          <p className=\"error-text\">{errorMessage}</p>\n        </div>\n      )}\n</Form>\n\n )\n} \n\nexport default Contactme"]},"metadata":{},"sourceType":"module"}